// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(50)
  firstName  String       @map("first_name") @db.VarChar(30)
  lastName   String       @map("last_name") @db.VarChar(30)
  password   String       @db.VarChar(512)
  disabledBy Int?         @map("disabled_by")
  disabledAt DateTime?    @map("disabled_at")
  createdAt  DateTime     @default(now()) @map("created_at")
  modifiedAt DateTime     @updatedAt @map("modified_at")
  Todo       Todo[]
  Collection Collection[]

  @@map("users")
}

model Collection {
  id             Int      @id @default(autoincrement())
  collectionName String   @map("collection_name") @db.VarChar(30)
  description    String   @db.VarChar(120)
  createdBy      Int      @map("created_by")
  createdAt      DateTime @default(now()) @map("created_at")
  modifiedAt     DateTime @updatedAt @map("modified_at")
  User           User     @relation(fields: [createdBy], references: [id])
  Todo           Todo[]

  @@map("collections")
}

model Todo {
  id              Int         @id @default(autoincrement())
  todoName        String      @map("todo_name") @db.VarChar(30)
  todoDescription String      @map("todo_description") @db.VarChar(120)
  createdBy       Int         @map("created_by")
  collectionId    Int?        @map("collection_id")
  dueDate         DateTime?
  createdAt       DateTime    @default(now()) @map("created_at")
  modifiedAt      DateTime    @updatedAt @map("modified_at")
  User            User        @relation(fields: [createdBy], references: [id])
  Collection      Collection? @relation(fields: [collectionId], references: [id])

  @@map("todos")
}
